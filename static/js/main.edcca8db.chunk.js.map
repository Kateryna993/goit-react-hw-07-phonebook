{"version":3,"sources":["components/ContactForm/Form.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","App.module.css","redux/contacts/contacts-selectors.js","services/contacts-api.js","redux/contacts/contacts-operations.js","components/ContactForm/Form.jsx","components/ContactList/ContactList.jsx","redux/contacts/contacts-actions.js","components/Filter/Filter.jsx","App.js","redux/contacts/contacts-reducer.js","redux/store/store.js","index.js"],"names":["module","exports","isLoading","state","contacts","getContacts","items","getFilter","filter","handleFilteredContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","fetchContacts","a","axios","get","data","addContact","newContact","post","deleteContact","contactId","delete","defaults","baseURL","createAsyncThunk","contactsAPI","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","nameInputId","shortid","generate","phoneInputId","handleChange","event","target","value","reset","onSubmit","e","preventDefault","find","alert","className","styles","formLabel","htmlFor","type","pattern","title","required","formInput","onChange","id","addContactBtn","addUserIcon","ContactList","loading","useEffect","contactList","map","contactItem","contactName","deleteBtn","onClick","deleteContacts","deleteIcon","size","changeFilter","createAction","Filter","filterContainer","findContactTitle","findContactIcon","filterInput","PhoneBookApp","phonebookWrapper","mainTitle","contactsTitle","createReducer","fulfilled","_","action","payload","pending","rejected","error","phoneBookActions","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.edcca8db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"Form_ContactForm__2mpMM\",\"formLabel\":\"Form_formLabel__1SoIU\",\"formInput\":\"Form_formInput__1QHs9\",\"addContactBtn\":\"Form_addContactBtn__3XUA6\",\"addUserIcon\":\"Form_addUserIcon__2s7Hi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__393TR\",\"contactItem\":\"ContactList_contactItem__2PNwq\",\"deleteBtn\":\"ContactList_deleteBtn__2NPP1\",\"deleteIcon\":\"ContactList_deleteIcon__1u2Vj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__2o1Vt\",\"findContactTitle\":\"Filter_findContactTitle__gSnzA\",\"findContactIcon\":\"Filter_findContactIcon__2uWHf\",\"filterInput\":\"Filter_filterInput__1jVrc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainTitle\":\"App_mainTitle__2Pe7c\",\"phonebookWrapper\":\"App_phonebookWrapper__2XAIK\"};","import { createSelector } from 'reselect';\n\nexport const isLoading = state => state.contacts.isLoading;\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const handleFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://6128056886a213001729f838.mockapi.io/app/';\n\nexport async function fetchContacts() {\n  const { data } = await axios.get(`/contacts`);\n  return data;\n}\n\nexport async function addContact(newContact) {\n  const { data } = await axios.post(`/contacts`, newContact);\n  return data;\n}\n\nexport async function deleteContact(contactId) {\n  const { data } = await axios.delete(`/contacts/${contactId}`);\n  return data;\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as contactsAPI from '../../services/contacts-api';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async () => {\n    const contacts = await contactsAPI.fetchContacts();\n    return contacts;\n  },\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async newContact => {\n    const contact = await contactsAPI.addContact(newContact);\n    return contact;\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async contactId => {\n    await contactsAPI.deleteContact(contactId);\n    return contactId;\n  },\n);\n","import { useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport styles from './Form.module.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BsPersonPlusFill } from 'react-icons/bs';\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\nimport { addContact } from '../../redux/contacts/contacts-operations';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n\r\n  const nameInputId = shortid.generate();\r\n  const phoneInputId = shortid.generate();\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      contacts.find(\r\n        contact => contact.name === name || contact.number === number,\r\n      )\r\n    ) {\r\n      alert(`This contact was already added!`);\r\n    } else {\r\n      dispatch(addContact({ name, number }));\r\n    }\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.ContactForm}>\r\n      <label className={styles.formLabel} htmlFor={nameInputId}>\r\n        Name\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        className={styles.formInput}\r\n        value={name}\r\n        onChange={handleChange}\r\n        id={nameInputId}\r\n      />\r\n      <label className={styles.formLabel} htmlFor={phoneInputId}>\r\n        Number\r\n      </label>\r\n      <input\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        className={styles.formInput}\r\n        value={number}\r\n        onChange={handleChange}\r\n        id={phoneInputId}\r\n      />\r\n      <button className={styles.addContactBtn} type=\"submit\">\r\n        <BsPersonPlusFill className={styles.addUserIcon} />\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// ContactForm.propTypes = {\r\n//   onSubmit: PropTypes.func.isRequired,\r\n// };\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   onSubmit: (name, number) => dispatch(actions.addContact(name, number)),\r\n// });\r\n\r\n// export default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport styles from './ContactList.module.css';\r\nimport { AiOutlineUserDelete } from 'react-icons/ai';\r\nimport ClipLoader from 'react-spinners/ClipLoader';\r\nimport {\r\n  fetchContacts,\r\n  deleteContact,\r\n} from '../../redux/contacts/contacts-operations';\r\nimport {\r\n  handleFilteredContacts,\r\n  isLoading,\r\n} from '../../redux/contacts/contacts-selectors';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(handleFilteredContacts);\r\n  const loading = useSelector(isLoading);\r\n  const dispatch = useDispatch();\r\n  const deleteContacts = id => dispatch(deleteContact(id));\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ul className={styles.contactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={styles.contactItem}>\r\n          <p className={styles.contactName}>\r\n            {name}: &nbsp;{number}\r\n          </p>\r\n          <button\r\n            className={styles.deleteBtn}\r\n            type=\"button\"\r\n            onClick={() => deleteContacts(id)}\r\n          >\r\n            <AiOutlineUserDelete className={styles.deleteIcon} />\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n      {loading && <ClipLoader size={50} />}\r\n    </ul>\r\n  );\r\n}\r\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\nimport { /* connect, */ useSelector, useDispatch } from 'react-redux';\r\n// import actions from '../../redux/actions/contacts';\r\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\nimport { FcSearch } from 'react-icons/fc';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className={styles.filterContainer}>\r\n      <h3 className={styles.findContactTitle}>\r\n        Find contacts by name <FcSearch className={styles.findContactIcon} />\r\n      </h3>\r\n      <input\r\n        className={styles.filterInput}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={event => dispatch(changeFilter(event.target.value))}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\n// Filter.propTypes = {\r\n//   filter: PropTypes.string,\r\n//   onChange: PropTypes.func,\r\n// };\r\n\r\n// const mapStateToProps = state => ({\r\n//   value: state.contacts.filter,\r\n// });\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   onChange: event => dispatch(actions.changeFilter(event.target.value)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","// import { useState } from 'react';\nimport ContactForm from './components/ContactForm/Form.jsx';\nimport ContactList from './components/ContactList/ContactList.jsx';\nimport Filter from './components/Filter/Filter.jsx';\n// import contactsList from './data/contacts.json';\n// import useLocalStorage from './hooks/LocalStorage.jsx';\n// import shortid from 'shortid';\nimport styles from './App.module.css';\n\nexport default function PhoneBookApp() {\n  return (\n    <div className={styles.phonebookWrapper}>\n      <h1 className={styles.mainTitle}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={styles.contactsTitle}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as phoneBookActions from './contacts-actions';\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from './contacts-operations.js';\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, action) => action.payload,\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContacts.pending]: null,\n  [fetchContacts.rejected]: (_, action) => action.payload,\n  [addContact.pending]: null,\n  [addContact.rejected]: (_, action) => action.payload,\n  [deleteContact.pending]: null,\n  [deleteContact.rejected]: (_, action) => action.payload,\n});\n\nconst filter = createReducer('', {\n  [phoneBookActions.changeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  isLoading,\n  error,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport contactsReducer from '../contacts/contacts-reducer';\nimport logger from 'redux-logger';\n// import thunk from 'redux-thunk';\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n\n/* vanilla redux logic */\n// const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n// });\n\n// const store = createStore(rootReducer, devToolsEnhancer());\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store/store';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}